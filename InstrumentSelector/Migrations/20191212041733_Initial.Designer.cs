// <auto-generated />
using System;
using InstrumentSelector.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstrumentSelector.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191212041733_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstrumentSelector.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText");

                    b.Property<DateTime>("CommentTime");

                    b.Property<string>("Instrument");

                    b.Property<int?>("InstrumentID");

                    b.Property<string>("UserName");

                    b.HasKey("CommentID");

                    b.HasIndex("InstrumentID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("InstrumentSelector.Models.Instrument", b =>
                {
                    b.Property<int>("InstrumentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionText");

                    b.Property<string>("Range");

                    b.Property<string>("RangeDescription");

                    b.Property<string>("Size");

                    b.Property<string>("Technical");

                    b.Property<string>("Tone");

                    b.Property<string>("ToneDescription");

                    b.HasKey("InstrumentID");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("InstrumentSelector.Models.Selection", b =>
                {
                    b.Property<int>("SelectionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PreferredInstrumentInstrumentID");

                    b.Property<string>("PreferredRange");

                    b.Property<string>("PreferredSize");

                    b.Property<string>("PreferredTechnical");

                    b.Property<string>("PreferredTone");

                    b.Property<int?>("SecondInstrumentInstrumentID");

                    b.HasKey("SelectionID");

                    b.HasIndex("PreferredInstrumentInstrumentID");

                    b.HasIndex("SecondInstrumentInstrumentID");

                    b.ToTable("Selections");
                });

            modelBuilder.Entity("InstrumentSelector.Models.Comment", b =>
                {
                    b.HasOne("InstrumentSelector.Models.Instrument")
                        .WithMany("Comments")
                        .HasForeignKey("InstrumentID");
                });

            modelBuilder.Entity("InstrumentSelector.Models.Selection", b =>
                {
                    b.HasOne("InstrumentSelector.Models.Instrument", "PreferredInstrument")
                        .WithMany()
                        .HasForeignKey("PreferredInstrumentInstrumentID");

                    b.HasOne("InstrumentSelector.Models.Instrument", "SecondInstrument")
                        .WithMany()
                        .HasForeignKey("SecondInstrumentInstrumentID");
                });
#pragma warning restore 612, 618
        }
    }
}
